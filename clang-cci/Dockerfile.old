FROM ubuntu:xenial

LABEL maintainer="Conan.io <info.conan.io>"

ARG COMPILER_VERSION
ARG LIBRARY_VERSION

ENV LLVM_VERSION=$COMPILER_VERSION \
    LIBCXX_VERSION=$LIBRARY_VERSION \
    CC=clang \
    CXX=clang++ \
    CMAKE_C_COMPILER=clang \
    CMAKE_CXX_COMPILER=clang++ \
    PYENV_ROOT=/opt/pyenv \
    PYTHON_VERSION=3.8.2 \
    PATH=/opt/pyenv/shims:${PATH} \
    CMAKE_VERSION=3.17.2

RUN dpkg --add-architecture i386 \
    && apt-get -qq update \
    # Install basics
    && apt-get install -y --no-install-recommends \
       sudo \
       wget \
       git \
       subversion \
       make \
       gnupg \
       ca-certificates \
       dh-autoreconf \
       apt-transport-https \
       xz-utils
    # Install compiler toolset

#RUN wget --no-check-certificate --quiet https://releases.llvm.org/${LIBCXX_VERSION}/clang+llvm-${LIBCXX_VERSION}-x86_64-linux-gnu-ubuntu-16.04.tar.xz \
#    && tar Jxf clang+llvm-${LIBCXX_VERSION}-x86_64-linux-gnu-ubuntu-16.04.tar.xz \
#    && find clang+llvm-${LIBCXX_VERSION}-x86_64-linux-gnu-ubuntu-16.04/ -type f -name "libc++*" | xargs -i cp {} /usr/lib/x86_64-linux-gnu \
#    && rm -rf clang*

RUN apt-get install -y --no-install-recommends \
       software-properties-common \
    && wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \
    && add-apt-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-${LLVM_VERSION} main" \
    && apt-get update

RUN apt-get install -y --no-install-recommends \
       clang-${LLVM_VERSION} \
       lldb-${LLVM_VERSION} \
       lld-${LLVM_VERSION} \
    && apt-get remove -y lsb-release software-properties-common


    # Install dependencies of Python
RUN apt-get install -y --no-install-recommends \
       libreadline-dev \
       libsqlite3-dev \
       libffi-dev \
       libssl-dev \
       zlib1g-dev \
       libbz2-dev \
       curl \
       libncurses5-dev \
       libncursesw5-dev \
       liblzma-dev \
    && apt-get autoremove -y \
    && apt-get clean all

    # Update default compiler
RUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${LLVM_VERSION} 100 \
    && update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${LLVM_VERSION} 100 \
    && update-alternatives --install /usr/bin/cc cc /usr/bin/clang-${LLVM_VERSION} 100 \
    && update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-${LLVM_VERSION} 100 \
    && update-alternatives --install /usr/bin/cpp cpp /usr/bin/clang++-${LLVM_VERSION} 100 \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd 1001 -g 1001 \
    && groupadd 1000 -g 1000 \
    && groupadd 2000 -g 2000 \
    && groupadd 999 -g 999 \
    && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999 \
    && printf "conan:conan" | chpasswd \
    && adduser conan sudo \
    && printf "conan ALL= NOPASSWD: ALL\\n" >> /etc/sudoers

RUN wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer \
    && chmod +x /tmp/pyenv-installer \
    && /tmp/pyenv-installer \
    && rm /tmp/pyenv-installer \
    && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100 \
    && PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install ${PYTHON_VERSION} \
    && pyenv global ${PYTHON_VERSION} \
    && pip install -q --upgrade --no-cache-dir pip \
    && pip install -q --no-cache-dir conan conan-package-tools cmake==${CMAKE_VERSION} \
    && chown -R conan:1001 /opt/pyenv

    # remove all __pycache__ directories created by pyenv
RUN find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf \
    && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100 \
    && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100 \
    && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100 \
    && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 \
    && update-alternatives --install /usr/bin/cmake cmake /opt/pyenv/shims/cmake 100

RUN wget --no-check-certificate --quiet https://releases.llvm.org/${LIBCXX_VERSION}/libcxx-${LIBCXX_VERSION}.src.tar.xz \
    && tar Jxf libcxx-${LIBCXX_VERSION}.src.tar.xz \
    && cd libcxx-${LIBCXX_VERSION}.src \
    && mkdir build \
    && cd build \
    && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DLLVM_CONFIG_PATH=/usr/bin/llvm-config-${LLVM_VERSION} \
    && cmake --build . \
    && cmake --build . --target install \
    && cd \
    && rm -rf libcxx-*

RUN wget --no-check-certificate --quiet https://releases.llvm.org/${LIBCXX_VERSION}/libcxxabi-${LIBCXX_VERSION}.src.tar.xz \
    && tar Jxf libcxxabi-${LIBCXX_VERSION}.src.tar.xz \
    && cd libcxxabi-${LIBCXX_VERSION}.src \
    && cp include/* /usr/include \
    && mkdir build \
    && cd build \
    && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DLLVM_CONFIG_PATH=/usr/bin/llvm-config-${LLVM_VERSION} -DLIBCXXABI_LIBCXX_INCLUDES=/usr/include/c++/v1 \
    && cmake --build . \
    && cmake --build . --target install \
    && cd \
    && rm -rf libcxxabi-*

USER conan
WORKDIR /home/conan

RUN mkdir -p /home/conan/.conan \
    && printf 'eval "$(pyenv init -)"\n' >> ~/.bashrc \
    && printf 'eval "$(pyenv virtualenv-init -)"\n' >> ~/.bashrc
